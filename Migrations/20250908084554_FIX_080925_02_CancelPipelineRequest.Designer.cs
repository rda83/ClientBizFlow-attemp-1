// <auto-generated />
using System;
using System.Text.Json;
using ClientBizFlow_attemp_1.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ClientBizFlow_attemp_1.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250908084554_FIX_080925_02_CancelPipelineRequest")]
    partial class FIX_080925_02_CancelPipelineRequest
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ClientBizFlow_attemp_1.Database.Entities.BizFlow.BizFlowJournalRecord", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<bool>("IsStartNowPipeline")
                        .HasColumnType("boolean");

                    b.Property<string>("ItemDescription")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("ItemId")
                        .HasColumnType("bigint");

                    b.Property<int>("ItemSortOrder")
                        .HasColumnType("integer");

                    b.Property<string>("LaunchId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("Period")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("PipelineName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Trigger")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TypeAction")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TypeOperationId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("LaunchId");

                    b.HasIndex("PipelineName");

                    b.ToTable("BizFlowJournalRecords");
                });

            modelBuilder.Entity("ClientBizFlow_attemp_1.Database.Entities.BizFlow.CancelPipelineRequest", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<bool>("ClosedAfterExpirationDate")
                        .HasColumnType("boolean");

                    b.Property<bool>("ClosingByExpirationTimeOnly")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("ClosingTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<bool>("Executed")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("ExpirationTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("PipelineName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("CancelPipelineRequests");
                });

            modelBuilder.Entity("ClientBizFlow_attemp_1.Database.Entities.BizFlow.Pipeline", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<bool>("Blocked")
                        .HasColumnType("boolean");

                    b.Property<string>("CronExpression")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Pipelines");
                });

            modelBuilder.Entity("ClientBizFlow_attemp_1.Database.Entities.BizFlow.PipelineItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<bool>("Blocked")
                        .HasColumnType("boolean");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<JsonElement>("Options")
                        .HasColumnType("jsonb");

                    b.Property<long>("PipelineId")
                        .HasColumnType("bigint");

                    b.Property<int>("SortOrder")
                        .HasColumnType("integer");

                    b.Property<string>("TypeOperationId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("PipelineId");

                    b.ToTable("PipelineItems");
                });

            modelBuilder.Entity("ClientBizFlow_attemp_1.Database.Entities.Common.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("StockQuantity")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Products");
                });

            modelBuilder.Entity("ClientBizFlow_attemp_1.Database.Entities.BizFlow.PipelineItem", b =>
                {
                    b.HasOne("ClientBizFlow_attemp_1.Database.Entities.BizFlow.Pipeline", "Pipeline")
                        .WithMany("PipelineItems")
                        .HasForeignKey("PipelineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pipeline");
                });

            modelBuilder.Entity("ClientBizFlow_attemp_1.Database.Entities.BizFlow.Pipeline", b =>
                {
                    b.Navigation("PipelineItems");
                });
#pragma warning restore 612, 618
        }
    }
}
